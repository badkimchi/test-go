// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.24.0
// source: query.sql

package db

import (
	"context"
	"database/sql"
)

const createAccount = `-- name: CreateAccount :one
INSERT INTO Account (Name, Password, Level, Email)
VALUES ($1, $2, $3, $4) RETURNING accountid, name, password, level, email
`

type CreateAccountParams struct {
	Name     sql.NullString `json:"name"`
	Password string         `json:"password"`
	Level    sql.NullInt32  `json:"level"`
	Email    sql.NullString `json:"email"`
}

func (q *Queries) CreateAccount(ctx context.Context, arg CreateAccountParams) (Account, error) {
	row := q.db.QueryRowContext(ctx, createAccount,
		arg.Name,
		arg.Password,
		arg.Level,
		arg.Email,
	)
	var i Account
	err := row.Scan(
		&i.Accountid,
		&i.Name,
		&i.Password,
		&i.Level,
		&i.Email,
	)
	return i, err
}

const deleteAccount = `-- name: DeleteAccount :exec
DELETE
FROM Account
WHERE AccountID = $1
`

func (q *Queries) DeleteAccount(ctx context.Context, accountid int64) error {
	_, err := q.db.ExecContext(ctx, deleteAccount, accountid)
	return err
}

const getAccount = `-- name: GetAccount :one
SELECT accountid, name, password, level, email
FROM Account
WHERE AccountID = $1 LIMIT 1
`

func (q *Queries) GetAccount(ctx context.Context, accountid int64) (Account, error) {
	row := q.db.QueryRowContext(ctx, getAccount, accountid)
	var i Account
	err := row.Scan(
		&i.Accountid,
		&i.Name,
		&i.Password,
		&i.Level,
		&i.Email,
	)
	return i, err
}

const updateAccount = `-- name: UpdateAccount :exec
UPDATE Account
SET Name     = $2,
    Password = $3,
    Level    = $4,
    Email    = $5
WHERE AccountID = $1
`

type UpdateAccountParams struct {
	Accountid int64          `json:"accountid"`
	Name      sql.NullString `json:"name"`
	Password  string         `json:"password"`
	Level     sql.NullInt32  `json:"level"`
	Email     sql.NullString `json:"email"`
}

func (q *Queries) UpdateAccount(ctx context.Context, arg UpdateAccountParams) error {
	_, err := q.db.ExecContext(ctx, updateAccount,
		arg.Accountid,
		arg.Name,
		arg.Password,
		arg.Level,
		arg.Email,
	)
	return err
}
